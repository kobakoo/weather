{"ast":null,"code":"var _jsxFileName = \"/Users/ryusei/Desktop/program/React/weather/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const fetchWeather = async () => {\n    const API_KEY = \"b8f3259f2ef9d894c1026fec139d82d8\"; // OpenWeatherMap APIキー\n    const CITY_NAME = \"Tokyo\"; // 都市名\n    const URL = `https://api.openweathermap.org/data/2.5/weather?q=${CITY_NAME}&appid=${API_KEY}&units=metric`; // リクエストURL\n    try {\n      const response = await axios.get(URL); // APIにリクエスト\n      setWeather(response.data); // 取得したデータをstateにセット\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchWeather(); // コンポーネントがマウントされたときに関数を呼び出す\n  }, []); // 空の配列を渡して一度だけ実行する\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `./${weather.weather[0].main}.png`,\n        alt: \"weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: weather.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.weather[0].main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [weather.main.temp, \"\\u2103\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zh6OemVMK1sGCMM7fACoVGDcjjs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Route","useParams","jsxDEV","_jsxDEV","App","_s","weather","setWeather","fetchWeather","API_KEY","CITY_NAME","URL","response","get","data","error","console","children","src","main","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","description","temp","_c","$RefreshReg$"],"sources":["/Users/ryusei/Desktop/program/React/weather/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nconst App = () => {\n  const [weather, setWeather] = useState(null);\n\n  const fetchWeather = async () => {\n    const API_KEY = \"b8f3259f2ef9d894c1026fec139d82d8\"; // OpenWeatherMap APIキー\n    const CITY_NAME = \"Tokyo\"; // 都市名\n    const URL = `https://api.openweathermap.org/data/2.5/weather?q=${CITY_NAME}&appid=${API_KEY}&units=metric`; // リクエストURL\n    try {\n      const response = await axios.get(URL); // APIにリクエスト\n      setWeather(response.data); // 取得したデータをstateにセット\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchWeather(); // コンポーネントがマウントされたときに関数を呼び出す\n  }, []); // 空の配列を渡して一度だけ実行する\n\n  return (\n    <div>\n      {weather && (\n        <div>\n          <img src={`./${weather.weather[0].main}.png`} alt=\"weather\" />\n          <h1>{weather.name}</h1>\n          <p>{weather.weather[0].main}</p>\n          <p>{weather.weather[0].description}</p>\n          <p>{weather.main.temp}℃</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACjE,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,OAAO,GAAG,kCAAkC,CAAC,CAAC;IACpD,MAAMC,SAAS,GAAG,OAAO,CAAC,CAAC;IAC3B,MAAMC,GAAG,GAAI,qDAAoDD,SAAU,UAASD,OAAQ,eAAc,CAAC,CAAC;IAC5G,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAACF,GAAG,CAAC,CAAC,CAAC;MACvCJ,UAAU,CAACK,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdY,YAAY,EAAE,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAc,QAAA,EACGX,OAAO,iBACNH,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAKe,GAAG,EAAG,KAAIZ,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACa,IAAK,MAAM;QAACC,GAAG,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC9DrB,OAAA;QAAAc,QAAA,EAAKX,OAAO,CAACmB;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACvBrB,OAAA;QAAAc,QAAA,EAAIX,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACa;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAChCrB,OAAA;QAAAc,QAAA,EAAIX,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACoB;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACvCrB,OAAA;QAAAc,QAAA,GAAIX,OAAO,CAACa,IAAI,CAACQ,IAAI,EAAC,QAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAE9B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAACnB,EAAA,CAhCID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}